//
//  base template generated by OpenBytes on 12/17/22.
//  Copyright (c) 2023 OpenBytes
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the conditions found at the following link:
//  https://github.com/0xOpenBytes/ios-BASE/blob/main/LICENSE
//
// Created by Leif.
//  Taskable.swift
//

import Foundation

protocol Taskable: Usable {
    func task(value action: (Self) async throws -> Void) async throws
    func task<Value>(value action: (Self) async throws -> Value) async throws -> Value
}

protocol StaticTaskable: StaticUsable {
    static func task(type action: (Self.Type) async throws -> Void) async throws
    static func task<Value>(type action: (Self.Type) async throws -> Value) async throws -> Value
}

extension Taskable {
    func task(value action: (Self) async throws -> Void) async throws {
        try await action(self)
    }

    func task<Value>(value action: (Self) async throws -> Value) async throws -> Value {
        try await action(self)
    }
}

extension StaticTaskable {
    static func task(type action: (Self.Type) async throws -> Void) async throws {
        try await action(Self.self)
    }

    static func task<Value>(type action: (Self.Type) async throws -> Value) async throws -> Value {
        try await action(Self.self)
    }
}
